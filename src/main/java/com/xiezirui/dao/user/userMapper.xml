<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiezirui.dao.user.userMapper">
    <select id="getLoginUser" parameterType="map" resultType="User">
        select * from `smbms_user` where userCode = #{userCode} and userPassword = #{userPassword}
    </select>

    <update id="updataPassword" parameterType="map">
        update `smbms_user` set userPassword = #{userPassword} where `id` = #{id}
    </update>

    <select id="getUserCount" parameterType="map" resultType="_int">
        select count(1) as count from smbms.smbms_user u,smbms.smbms_role r
        <where>
            u.userRole = r.id
            <if test="userName != null">
                and u.userName like  "%"#{userName}"%"
            </if>
            <if test="userRole > 0">
                and u.userRole = #{userRole}
            </if>
        </where>
    </select>

    <select id="getUserList" parameterType="map" resultType="User">
        select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r
        <where>
            u.userRole = r.id
            <if test="userName != null">
                and u.userName like "%"#{userName}"%"
            </if>
            <if test="userRole > 0">
                and u.userRole = #{userRole}
            </if>
            order by creationDate desc limit #{currentPageNo},#{pageSize}
        </where>
    </select>

    <select id="getUserById" parameterType="string" resultType="User">
        select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where u.id=#{id} and u.userRole = r.id
    </select>

    <update id="modify" parameterType="User">
        update smbms_user set userName=#{userName},gender=#{gender},birthday=#{birthday},phone=#{phone},address=#{address},userRole=#{userRole},modifyBy=#{modifyBy},modifyDate=#{modifyDate} where id = #{id}
    </update>

    <insert id="add" parameterType="User">
        insert into smbms_user (userCode,userName,userPassword,userRole,gender,birthday,phone,address,creationDate,createdBy) values(#{userCode},#{userName},#{userPassword},#{userRole},#{gender},#{birthday},#{phone},#{address},#{creationDate},#{createdBy})
    </insert>

    <delete id="deleteUserById" parameterType="int">
        delete from `smbms_user` where id=#{id}
    </delete>
</mapper>